{"version":3,"sources":["templateReducer.js"],"names":[],"mappings":";;;;;kBAGwB,e;;AAHxB;;IAAY,K;;AACZ;;;;;;;;;;AAEe,SAAS,eAAT,GAAiE;AAAA,QAAxC,KAAwC,yDAAhC,uBAAa,SAAmB;AAAA,QAAR,MAAQ;;AAC5E,YAAO,OAAO,IAAd;;AAEI,aAAK,MAAM,sBAAX;AACI,mBAAO,OAAO,SAAd;;AAEJ,aAAK,MAAM,uBAAX;AACI,gDACO,KADP,IAEI,OAAO,MAAP,CAAc,EAAd,EAAkB,OAAO,QAAzB,CAFJ;;AAKJ,aAAK,MAAM,uBAAX;AACI,gDACO,MAAM,MAAN,CAAa;AAAA,uBAAY,SAAS,EAAT,KAAgB,OAAO,QAAP,CAAgB,EAA5C;AAAA,aAAb,CADP,IAEI,OAAO,MAAP,CAAc,EAAd,EAAkB,OAAO,QAAzB,CAFJ;;AAKJ;AACI,mBAAO,KAAP;AAlBR;AAoBH","file":"templateReducer-compiled.js","sourcesContent":["import * as types from '../actions/actionTypes';\r\nimport initialState from './initialState';\r\n\r\nexport default function templateReducer(state = initialState.templates, action) {\r\n    switch(action.type) {\r\n\r\n        case types.LOAD_TEMPLATES_SUCCESS:\r\n            return action.templates;\r\n\r\n        case types.CREATE_TEMPLATE_SUCCESS:\r\n            return [\r\n                ...state,\r\n                Object.assign({}, action.template)\r\n            ];\r\n\r\n        case types.UPDATE_TEMPLATE_SUCCESS:\r\n            return [\r\n                ...state.filter(template => template.id !== action.template.id),\r\n                Object.assign({}, action.template)\r\n            ];\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}"]}