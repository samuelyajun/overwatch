{"version":3,"sources":["questionActions.js"],"names":[],"mappings":";;;;;QAIgB,oB,GAAA,oB;QAIA,a,GAAA,a;;AARhB;;;;AACA;;IAAY,K;;AACZ;;;;;;AAEO,SAAS,oBAAT,CAA8B,SAA9B,EAAyC;AAC5C,WAAO,EAAC,MAAM,MAAM,sBAAb,EAAqC,oBAArC,EAAP;AACH;;AAEM,SAAS,aAAT,GAAyB;AAC5B,WAAO,oBAAY;AACf,iBAAS,6CAAT;AACA,eAAO,0BAAY,eAAZ,GAA8B,IAA9B,CAAmC,qBAAa;AACnD,qBAAS,qBAAqB,SAArB,CAAT;AACH,SAFM,EAEJ,KAFI,CAEE,iBAAS;AACd,kBAAM,KAAN;AACH,SAJM,CAAP;AAKH,KAPD;AAQH","file":"questionActions-compiled.js","sourcesContent":["import QuestionApi from '../api/mockQuestionApi';\r\nimport * as types from './actionTypes';\r\nimport {initiateAjaxRequest} from './ajaxStatusActions';\r\n\r\nexport function loadQuestionsSuccess(questions) {\r\n    return {type: types.LOAD_QUESTIONS_SUCCESS, questions};\r\n}\r\n\r\nexport function loadQuestions() {\r\n    return dispatch => {\r\n        dispatch(initiateAjaxRequest());\r\n        return QuestionApi.getAllQuestions().then(questions => {\r\n            dispatch(loadQuestionsSuccess(questions));\r\n        }).catch(error => {\r\n            throw(error);\r\n        });\r\n    };\r\n}"]}