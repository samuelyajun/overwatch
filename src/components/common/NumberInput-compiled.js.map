{"version":3,"sources":["NumberInput.js"],"names":[],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAM,cAAc,SAAd,WAAc,OAAmE;AAAA,QAAjE,IAAiE,QAAjE,IAAiE;AAAA,QAA3D,KAA2D,QAA3D,KAA2D;AAAA,QAApD,QAAoD,QAApD,QAAoD;AAAA,QAA1C,WAA0C,QAA1C,WAA0C;AAAA,QAA7B,KAA6B,QAA7B,KAA6B;AAAA,QAAtB,KAAsB,QAAtB,KAAsB;AAAA,QAAf,IAAe,QAAf,IAAe;AAAA,QAAT,GAAS,QAAT,GAAS;;AACnF,QAAI,eAAe,YAAnB;;AAEA,QAAM,YAAY;AACd,gBAAS;AADK,KAAlB;;AAIA,QAAG,SAAS,MAAM,MAAN,GAAe,CAA3B,EAA8B;AAC1B,wBAAgB,MAAM,WAAtB;AACA,eAAO,OAAO,IAAP,GAAc,MAArB;AACH;AACD,WACI;AAAA;AAAA,UAAK,WAAW,YAAhB;AACI;AAAA;AAAA,cAAO,SAAS,IAAhB;AAAuB;AAAvB,SADJ;AAEI;AAAA;AAAA,cAAK,WAAU,gBAAf,EAAgC,OAAO,SAAvC;AACI,qDAAO,MAAM,IAAb;AACO,sBAAQ,IADf;AAEO,2BAAU,cAFjB;AAGO,6BAAa,WAHpB;AAIO,uBAAO,KAJd;AAKO,0BAAY,QALnB;AAMO,qBAAO;AANd,cADJ;AASK,qBAAS;AAAA;AAAA,kBAAK,WAAU,oBAAf;AAAqC;AAArC;AATd;AAFJ,KADJ;AAgBH,CA3BD;;AA6BA,YAAY,SAAZ,GAAwB;AACpB,UAAM,iBAAU,MAAV,CAAiB,UADH;AAEpB,WAAO,iBAAU,MAFG;AAGpB,cAAU,iBAAU,IAAV,CAAe,UAHL;AAIpB,iBAAa,iBAAU,MAJH;AAKpB,WAAO,iBAAU,MALG;AAMpB,WAAO,iBAAU,MANG;AAOpB,UAAM,iBAAU,MAPI;AAQpB,SAAM,iBAAU;;AARI,CAAxB;;kBAYe,W","file":"NumberInput-compiled.js","sourcesContent":["import React, { PropTypes } from 'react';\r\n\r\nconst NumberInput = ({name, label, onChange, placeholder, value, error, type, min}) => {\r\n    let wrapperClass = 'form-group';\r\n\r\n    const topMargin = {\r\n        margin : '15px'\r\n    };\r\n\r\n    if(error && error.length > 0) {\r\n        wrapperClass += \" \" + 'has-error';\r\n        type = type ? type : \"text\";\r\n    }\r\n    return (\r\n        <div className={wrapperClass}>\r\n            <label htmlFor={name}>{label}</label>\r\n            <div className=\"field col-xs-2\" style={topMargin}>\r\n                <input type={type}\r\n                       name = {name}\r\n                       className=\"form-control\"\r\n                       placeholder={placeholder}\r\n                       value={value}\r\n                       onChange = {onChange}\r\n                       min = {min}\r\n                />\r\n                {error && <div className=\"alert alert-danger\">{error}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nNumberInput.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    label: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n    placeholder: PropTypes.number,\r\n    value: PropTypes.number,\r\n    error: PropTypes.string,\r\n    type: PropTypes.string,\r\n    min : PropTypes.string\r\n\r\n};\r\n\r\nexport default NumberInput;\r\n"]}