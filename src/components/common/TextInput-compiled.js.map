{"version":3,"sources":["TextInput.js"],"names":[],"mappings":";;;;;;AAAA;;;;;;AAEA,IAAM,YAAY,SAAZ,SAAY,OAA8D;AAAA,QAA5D,IAA4D,QAA5D,IAA4D;AAAA,QAAtD,KAAsD,QAAtD,KAAsD;AAAA,QAA/C,QAA+C,QAA/C,QAA+C;AAAA,QAArC,WAAqC,QAArC,WAAqC;AAAA,QAAxB,KAAwB,QAAxB,KAAwB;AAAA,QAAjB,KAAiB,QAAjB,KAAiB;AAAA,QAAV,IAAU,QAAV,IAAU;;AAC5E,QAAI,eAAe,YAAnB;AACA,QAAG,SAAS,MAAM,MAAN,GAAe,CAA3B,EAA8B;AAC1B,wBAAgB,MAAM,WAAtB;AACA,eAAO,OAAO,IAAP,GAAc,MAArB;AACH;AACD,WACI;AAAA;AAAA,UAAK,WAAW,YAAhB;AACI;AAAA;AAAA,cAAO,SAAS,IAAhB;AAAuB;AAAvB,SADJ;AAEI;AAAA;AAAA,cAAK,WAAU,OAAf;AACI,qDAAO,MAAM,IAAb;AACO,sBAAQ,IADf;AAEO,2BAAU,cAFjB;AAGO,6BAAa,WAHpB;AAIO,uBAAO,KAJd;AAKO,0BAAY;AALnB,cADJ;AAQK,qBAAS;AAAA;AAAA,kBAAK,WAAU,oBAAf;AAAqC;AAArC;AARd;AAFJ,KADJ;AAeH,CArBD;;AAuBA,UAAU,SAAV,GAAsB;AAClB,UAAM,iBAAU,MAAV,CAAiB,UADL;AAElB,WAAO,iBAAU,MAAV,CAAiB,UAFN;AAGlB,cAAU,iBAAU,IAAV,CAAe,UAHP;AAIlB,iBAAa,iBAAU,MAJL;AAKlB,WAAO,iBAAU,MALC;AAMlB,WAAO,iBAAU,MANC;AAOlB,UAAM,iBAAU;;AAPE,CAAtB;;kBAWe,S","file":"TextInput-compiled.js","sourcesContent":["import React, { PropTypes } from 'react';\r\n\r\nconst TextInput = ({name, label, onChange, placeholder, value, error, type}) => {\r\n    let wrapperClass = 'form-group';\r\n    if(error && error.length > 0) {\r\n        wrapperClass += \" \" + 'has-error';\r\n        type = type ? type : \"text\";\r\n    }\r\n    return (\r\n        <div className={wrapperClass}>\r\n            <label htmlFor={name}>{label}</label>\r\n            <div className=\"field\">\r\n                <input type={type}\r\n                       name = {name}\r\n                       className=\"form-control\"\r\n                       placeholder={placeholder}\r\n                       value={value}\r\n                       onChange = {onChange}\r\n                />\r\n                {error && <div className=\"alert alert-danger\">{error}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nTextInput.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    placeholder: PropTypes.string,\r\n    value: PropTypes.string,\r\n    error: PropTypes.string,\r\n    type: PropTypes.string\r\n\r\n};\r\n\r\nexport default TextInput;\r\n"]}